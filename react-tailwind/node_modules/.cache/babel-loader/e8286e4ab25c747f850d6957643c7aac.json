{"ast":null,"code":"var _jsxFileName = \"/home/calvin/MiscProjects/react-tailwind/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ImageCard from \"./Components/ImageCard\";\nimport ImageSearch from \"./Components/ImageSearch\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`).then(res => res.json()).then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    }).catch(err => console.log(err));\n  }, [term]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageSearch, {\n    searchText: text => setTerm(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), !isLoading && images.length === 0 && /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-5xl text-center mx-auto mt-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 51\n    }\n  }, \"No Images Found!\"), isLoading ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-6xl text-center mx-auto mt-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-3 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, images.map(image => /*#__PURE__*/React.createElement(ImageCard, {\n    key: image.id,\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/calvin/MiscProjects/react-tailwind/src/App.js"],"names":["React","useState","useEffect","ImageCard","ImageSearch","App","images","setImages","isLoading","setIsLoading","term","setTerm","fetch","process","env","REACT_APP_PIXABAY_API_KEY","then","res","json","data","hits","catch","err","console","log","text","length","map","image","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AACC,SAASC,GAAT,GAAe;AAEX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAE,gCAA+BC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,MAAKL,IAAK,+BAAjF,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVZ,MAAAA,SAAS,CAACY,IAAI,CAACC,IAAN,CAAT;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALD,EAMCY,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANd;AAOH,GARQ,EAQN,CAACZ,IAAD,CARM,CAAT;AAUD,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAGe,IAAD,IAAUd,OAAO,CAACc,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,CAACjB,SAAD,IAAcF,MAAM,CAACoB,MAAP,KAAkB,CAAhC,iBAAqC;AAAI,IAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAF1C,EAGKlB,SAAS,gBAAG;AAAI,IAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAEF;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHF,MAAM,CAACqB,GAAP,CAAWC,KAAK,iBACb,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADG,CALZ,CADJ;AAaH;;AAED,eAAevB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ImageCard from \"./Components/ImageCard\";\nimport ImageSearch from \"./Components/ImageSearch\";\n function App() {\n\n     const [images, setImages] = useState([]);\n     const [isLoading, setIsLoading] = useState(true);\n     const [term, setTerm] = useState(\"\");\n\n     useEffect(() => {\n         fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n         .then(res => res.json())\n         .then(data => {\n             setImages(data.hits);\n             setIsLoading(false);\n         })\n         .catch(err => console.log(err));\n     }, [term]);\n\n    return (\n        <div className=\"container mx-auto\">\n            <ImageSearch searchText={(text) => setTerm(text)} />\n            {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found!</h1>}\n            {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">\n                Loading...\n            </h1> : <div className=\"grid grid-cols-3 gap-4\">\n                {images.map(image => (\n                    <ImageCard key={image.id} image={image}/>\n                ))}\n            </div>}\n        </div>\n    )\n}\n\nexport default App     "]},"metadata":{},"sourceType":"module"}